pipeline {
    agent any
    tools{
        jdk  'jdk17'
        maven  'maven'
    }
    
    environment{
        SCANNER_HOME= tool 'sonar-scanner'
    }
    
    stages {
        stage('Git Checkout') {
            steps {
                git branch: 'main', changelog: false, poll: false, url: 'https://github.com/Madhunath/project1.git'
            }
        }
        
        stage('COMPILE') {
            steps {
                sh "mvn clean compile -DskipTests=true"
            }
        }
        
        stage('Sonarqube Analysis') {
            steps {
                   sh ''' $SCANNER_HOME/bin/sonar-scanner -Dsonar.url=http://3.238.176.23:9000/ -Dsonar.login=squ_85a77b978af467b81ef54204853cf5210edd06b9 -Dsonar.projectName=Shopping-app \
                   -Dsonar.java.binaries=. \
                   -Dsonar.projectKey=Shopping-app '''
            }
        }
        
                
        stage('Build') {
            steps {
                sh "mvn clean package -DskipTests=true"
            }
        }
        
        stage('Docker Build & Push') {
            steps {
                script{
                    withDockerRegistry(credentialsId: 'docker', toolName: 'docker') {
                        
                        sh "docker build -t shopping-app -f docker/Dockerfile ."
                        sh "docker tag  shopping-app madhunath/shopping-app:latest"
                        sh "docker push madhunath/shopping-app:latest"
                    }
                }
            }
        }
    
        stage('Docker Deploy to Container') {
            steps {
                script {
                withDockerRegistry(credentialsId: 'docker', toolName: 'docker') {
                    sh "docker run -d --name shopping-app -p 8070:8070 madhunath/shopping-app:latest" }
                }                
            }
        }
    }
}
